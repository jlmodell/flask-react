{"version":3,"sources":["pages/Helen.js","pages/Bic.js","pages/Planning.js","pages/App.js","serviceWorker.js","index.js"],"names":["HelenFile","useState","date","setDate","file","setFile","email","setEmail","fname","setFname","useEffect","navigate","state","filename","handleSubmit","e","a","preventDefault","formData","FormData","xlFile","document","querySelector","set","append","files","config","headers","axios","post","response","data","result","console","log","style","container","helenFileCss","action","method","onSubmit","TextField","type","value","onChange","target","label","name","margin","InputLabelProps","shrink","required","fullWidth","variant","id","multiline","spacer","HelenSuccess","props","file_ext","useRef","location","download","responseType","get","blob","Blob","ref","current","href","URL","createObjectURL","click","display","onClick","flexDirection","justifyContent","alignItems","flexWrap","width","marginTop","marginBottom","now","Date","Bic","classes","useStyles","toISOString","substring","checked","setChecked","po","setPO","bicFile","setBicFile","loading","setLoading","excel","setExcel","bicXlFile","css","FormControlLabel","control","Checkbox","className","root","CircularProgress","size","BicSuccess","makeStyles","theme","marginLeft","spacing","Planning","html","setHtml","PlanningSuccess","Html","dangerouslySetInnerHTML","__html","Home","Boolean","window","hostname","match","ReactDOM","render","to","path","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52bc33a2.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport { TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nexport const HelenFile = () => {\n  const [date, setDate] = useState(\"2019-10-31\");\n  const [file, setFile] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [fname, setFname] = useState(\"\");\n\n  useEffect(() => {\n    if (fname) {\n      navigate(\"/helen_success\", { state: { filename: fname } });\n    }\n  }, [fname]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    let formData = new FormData();\n\n    let xlFile = document.querySelector(\"#file\");\n\n    formData.set(\"date\", date);\n    formData.set(\"email\", email);\n    formData.append(\"file\", xlFile.files[0]);\n\n    let config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n\n    try {\n      // let response = await axios.get(\"/api/helen_file\");\n      let response = await axios.post(\"api/helen_file\", formData, config);\n      setFname(response.data.result);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div style={container}>\n      <form\n        style={helenFileCss}\n        action=\"/helen_success\"\n        method=\"POST\"\n        // encType=\"multipart/form-data\"\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          type=\"date\"\n          // defaultValue=\"2019-10-31\"\n          value={date}\n          onChange={e => setDate(e.target.value)}\n          label=\"Date\"\n          name=\"date\"\n          margin=\"normal\"\n          InputLabelProps={{ shrink: true }}\n          required={true}\n          fullWidth\n          variant=\"outlined\"\n        />\n        <TextField\n          type=\"file\"\n          id=\"file\"\n          label=\"File\"\n          name=\"file\"\n          value={file}\n          onChange={e => setFile(e.target.value)}\n          margin=\"normal\"\n          required={true}\n          fullWidth\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n        />\n        <TextField\n          type=\"text\"\n          multiline\n          label=\"Email(s) 'comma' to separate.(optional)\"\n          name=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          margin=\"normal\"\n          fullWidth\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n        />\n        <div style={spacer}></div>\n        <TextField type=\"submit\" fullWidth variant=\"outlined\" />\n      </form>\n    </div>\n  );\n};\n\nexport const HelenSuccess = props => {\n  const file_ext = useRef();\n\n  let filename = props.location.state.filename || \"test.xlsx\";\n\n  const download = async () => {\n    let responseType = {\n      responseType: \"arraybuffer\"\n    };\n\n    try {\n      let response = await axios.get(\"/download/\" + filename, responseType);\n      let blob = new Blob([response.data], {\n        type: response.headers[\"content-type\"]\n      });\n      let ref = file_ext;\n      ref.current.href = URL.createObjectURL(blob);\n      ref.current.download = filename;\n      ref.current.click();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div style={container}>\n      <h1>Success {filename}</h1>\n      <div>\n        <p>\n          Download file:{\" \"}\n          <a style={{ display: \"none\" }} href=\"empty\" ref={file_ext}>\n            ref\n          </a>\n          <button onClick={download}>{filename}</button>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nconst container = {\n  margin: \"2rem\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nconst helenFileCss = {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"80%\"\n};\nconst spacer = {\n  marginTop: \"1rem\",\n  marginBottom: \"1rem\"\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport { TextField, Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\n\nlet now = new Date();\n\nexport const Bic = () => {\n  const classes = useStyles();\n  const [date, setDate] = useState(now.toISOString().substring(0, 10));\n  const [checked, setChecked] = useState(false);\n  const [po, setPO] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [bicFile, setBicFile] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [excel, setExcel] = useState(\"\");\n\n  useEffect(() => {\n    if (excel) {\n      console.log(excel);\n      navigate(\"/bic_success\", { state: { filename: excel } });\n    }\n  }, [excel]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    setLoading(true);\n\n    let formData = new FormData();\n\n    let xlFile = document.querySelector(\"#file\");\n    let bicXlFile = document.querySelector(\"#bicFile\");\n\n    formData.set(\"date\", date);\n    formData.set(\"po\", po);\n    formData.set(\"email\", email);\n    formData.append(\"file\", xlFile.files[0]);\n    formData.append(\"bicFile\", bicXlFile.files[0]);\n\n    let config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n\n    try {\n      let response = await axios.post(\"api/bic\", formData, config);\n      setExcel(response.data.result);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={container}>\n      <form\n        style={css}\n        method=\"POST\"\n        action=\"/bic_success\"\n        onSubmit={handleSubmit}\n      >\n        <FormControlLabel\n          control={\n            <Checkbox checked={checked} onChange={() => setChecked(!checked)} />\n          }\n          label=\"Update BIC in Progress\"\n        />\n\n        <TextField\n          type=\"date\"\n          name=\"date\"\n          value={date}\n          onChange={e => setDate(e.target.value)}\n          variant=\"outlined\"\n          label=\"Date\"\n          required={true}\n          InputLabelProps={{ shrink: true }}\n          fullWidth\n          margin=\"normal\"\n        />\n        <TextField\n          type=\"text\"\n          name=\"po\"\n          value={po}\n          onChange={e => setPO(e.target.value)}\n          variant=\"outlined\"\n          label=\"Purchase Order #\"\n          required={true}\n          InputLabelProps={{ shrink: true }}\n          fullWidth\n          margin=\"normal\"\n        />\n        <TextField\n          type=\"file\"\n          name=\"file\"\n          id=\"file\"\n          value={file}\n          onChange={e => setFile(e.target.value)}\n          variant=\"outlined\"\n          label=\"Release Schedule.xls\"\n          required={true}\n          InputLabelProps={{ shrink: true }}\n          fullWidth\n          margin=\"normal\"\n        />\n        {checked && (\n          <TextField\n            type=\"file\"\n            name=\"bicFile\"\n            id=\"bicFile\"\n            value={bicFile}\n            onChange={e => setBicFile(e.target.value)}\n            variant=\"outlined\"\n            label=\"BIC File in Progress\"\n            InputLabelProps={{ shrink: true }}\n            fullWidth\n            margin=\"normal\"\n          />\n        )}\n        <TextField\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          variant=\"outlined\"\n          label=\"Email (optional) - separate with commas \"\n          required={true}\n          InputLabelProps={{ shrink: true }}\n          fullWidth\n          margin=\"normal\"\n        />\n        <div style={spacer} />\n        {loading ? (\n          <div className={classes.root}>\n            <CircularProgress size={60} />\n          </div>\n        ) : (\n          <TextField type=\"submit\" fullWidth variant=\"outlined\" />\n        )}\n\n        <div style={spacer} />\n      </form>\n    </div>\n  );\n};\n\nexport const BicSuccess = props => {\n  const file_ext = useRef();\n\n  let filename = props.location.state.filename || \"test.xlsx\";\n\n  const download = async () => {\n    let responseType = {\n      responseType: \"arraybuffer\"\n    };\n\n    try {\n      let response = await axios.get(\"download/\" + filename, responseType);\n      let blob = new Blob([response.data], {\n        type: response.headers[\"content-type\"]\n      });\n      let ref = file_ext;\n      ref.current.href = URL.createObjectURL(blob);\n      ref.current.download = filename;\n      ref.current.click();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div style={container}>\n      <h1>Success {filename}</h1>\n      <div>\n        <p>\n          Download file:{\" \"}\n          <a style={{ display: \"none\" }} href=\"empty\" ref={file_ext}>\n            ref\n          </a>\n          <button onClick={download}>{filename}</button>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nconst container = {\n  margin: \"2rem\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nconst css = {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"80%\"\n};\nconst spacer = {\n  marginTop: \"1rem\",\n  marginBottom: \"1rem\"\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport { TextField } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\n\nexport const Planning = () => {\n  const classes = useStyles();\n  const [file, setFile] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [excel, setExcel] = useState(\"\");\n  const [html, setHtml] = useState(\"\");\n\n  useEffect(() => {\n    if (excel) {\n      navigate(\"/planning_success\", { state: { filename: excel, html: html } });\n    }\n  }, [excel, html]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    let formData = new FormData();\n\n    let xlFile = document.querySelector(\"#file\");\n\n    formData.set(\"email\", email);\n    formData.append(\"file\", xlFile.files[0]);\n\n    let config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n\n    try {\n      let response = await axios.post(\"/api/planning\", formData, config);\n      setExcel(response.data.result);\n      setHtml(response.data.html);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={container}>\n      <form\n        style={css}\n        method=\"POST\"\n        action=\"/planning_success\"\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          type=\"file\"\n          name=\"file\"\n          id=\"file\"\n          value={file}\n          onChange={e => setFile(e.target.value)}\n          variant=\"outlined\"\n          label=\"planningsocustkit.csv *no headers*\"\n          required={true}\n          InputLabelProps={{ shrink: true }}\n          fullWidth\n          margin=\"normal\"\n        />\n        <TextField\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          variant=\"outlined\"\n          label=\"Email (optional) - separate with commas \"\n          InputLabelProps={{ shrink: true }}\n          fullWidth\n          margin=\"normal\"\n        />\n        <div style={spacer} />\n        {loading ? (\n          <div className={classes.root}>\n            <CircularProgress size={60} />\n          </div>\n        ) : (\n          <TextField type=\"submit\" fullWidth variant=\"outlined\" />\n        )}\n\n        <div style={spacer} />\n      </form>\n    </div>\n  );\n};\n\nexport const PlanningSuccess = props => {\n  const file_ext = useRef();\n\n  let filename = props.location.state.filename || \"test.xlsx\";\n  const Html = props.location.state.html;\n\n  const download = async () => {\n    let responseType = {\n      responseType: \"arraybuffer\"\n    };\n\n    try {\n      let response = await axios.get(\"download/\" + filename, responseType);\n      let blob = new Blob([response.data], {\n        type: response.headers[\"content-type\"]\n      });\n      let ref = file_ext;\n      ref.current.href = URL.createObjectURL(blob);\n      ref.current.download = filename;\n      ref.current.click();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div style={container}>\n      <h1>Success {filename}</h1>\n      <div>\n        <p>\n          Download file:{\" \"}\n          <a style={{ display: \"none\" }} href=\"empty\" ref={file_ext}>\n            ref\n          </a>\n          <button onClick={download}>{filename}</button>\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: Html }} />\n      </div>\n    </div>\n  );\n};\n\nconst container = {\n  margin: \"2rem\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nconst css = {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"80%\"\n};\nconst spacer = {\n  marginTop: \"1rem\",\n  marginBottom: \"1rem\"\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n","import React from \"react\";\nimport { Link, Router } from \"@reach/router\";\nimport { HelenFile, HelenSuccess } from \"./Helen\";\nimport { Bic, BicSuccess } from \"./Bic\";\nimport { Planning, PlanningSuccess } from \"./Planning\";\n\nexport const App = () => {\n  return (\n    <div>\n      <nav>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"helen\">Helen 6417R1 File</Link>\n        <Link to=\"bic\">Bic</Link>\n        <Link to=\"planning\">Planning (Heber)</Link>\n      </nav>\n      <Router>\n        <Home path=\"/\" />\n        <HelenFile path=\"helen\" />\n        <HelenSuccess path=\"helen_success\" />\n        <Bic path=\"bic\" />\n        <BicSuccess path=\"bic_success\" />\n        <Planning path=\"planning\" />\n        <PlanningSuccess path=\"planning_success\" />\n      </Router>\n    </div>\n  );\n};\n\nconst Home = () => (\n  <div>\n    <h1>Welcome</h1>\n  </div>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./pages/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}