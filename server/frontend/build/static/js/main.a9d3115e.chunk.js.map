{"version":3,"sources":["pages/Helen.js","pages/Bic.js","pages/Idle.js","pages/Planning.js","pages/App.js","serviceWorker.js","index.js"],"names":["HelenFile","useState","date","setDate","file","setFile","email","setEmail","fname","setFname","useEffect","navigate","state","filename","handleSubmit","e","a","preventDefault","formData","FormData","xlFile","document","querySelector","set","append","files","config","headers","axios","post","response","data","result","console","log","style","container","helenFileCss","action","method","onSubmit","TextField","type","value","onChange","target","label","name","margin","InputLabelProps","shrink","required","fullWidth","variant","id","multiline","spacer","HelenSuccess","props","file_ext","useRef","location","download","responseType","get","blob","Blob","ref","current","href","URL","createObjectURL","click","display","onClick","flexDirection","justifyContent","alignItems","flexWrap","width","marginTop","marginBottom","now","Date","Bic","classes","useStyles","toISOString","substring","checked","setChecked","po","setPO","bicFile","setBicFile","loading","setLoading","excel","setExcel","bicXlFile","css","FormControlLabel","control","Checkbox","className","root","CircularProgress","size","BicSuccess","makeStyles","theme","marginLeft","spacing","Idle","wage","html","sum_idle","proj_annual","values","setValues","handleChange","IdleSuccess","dangerouslySetInnerHTML","__html","Planning","setHtml","PlanningSuccess","Html","Home","appBar","zIndex","drawer","flexShrink","drawerPaper","content","flexGrow","padding","toolbar","mixins","Boolean","window","hostname","match","ReactDOM","render","AppBar","position","Toolbar","Typography","noWrap","Drawer","paper","List","text","link","map","d","i","Fragment","key","ListItem","button","to","ListItemText","primary","Divider","path","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9d3115e.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport { TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nexport const HelenFile = () => {\n  const [date, setDate] = useState(\"2019-10-31\");\n  const [file, setFile] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [fname, setFname] = useState(\"\");\n\n  useEffect(() => {\n    if (fname) {\n      navigate(\"/helen_success\", { state: { filename: fname } });\n    }\n  }, [fname]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    let formData = new FormData();\n\n    let xlFile = document.querySelector(\"#file\");\n\n    formData.set(\"date\", date);\n    formData.set(\"email\", email);\n    formData.append(\"file\", xlFile.files[0]);\n\n    let config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n\n    try {\n      // let response = await axios.get(\"/api/helen_file\");\n      let response = await axios.post(\"api/helen_file\", formData, config);\n      setFname(response.data.result);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div style={container}>\n      <form\n        style={helenFileCss}\n        action=\"/helen_success\"\n        method=\"POST\"\n        // encType=\"multipart/form-data\"\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          type=\"date\"\n          // defaultValue=\"2019-10-31\"\n          value={date}\n          onChange={e => setDate(e.target.value)}\n          label=\"Date\"\n          name=\"date\"\n          margin=\"normal\"\n          InputLabelProps={{ shrink: true }}\n          required={true}\n          fullWidth\n          variant=\"outlined\"\n        />\n        <TextField\n          type=\"file\"\n          id=\"file\"\n          label=\"File\"\n          name=\"file\"\n          value={file}\n          onChange={e => setFile(e.target.value)}\n          margin=\"normal\"\n          required={true}\n          fullWidth\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n        />\n        <TextField\n          type=\"text\"\n          multiline\n          label=\"Email(s) 'comma' to separate.(optional)\"\n          name=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          margin=\"normal\"\n          fullWidth\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n        />\n        <div style={spacer}></div>\n        <TextField type=\"submit\" fullWidth variant=\"outlined\" />\n      </form>\n    </div>\n  );\n};\n\nexport const HelenSuccess = props => {\n  const file_ext = useRef();\n\n  let filename = props.location.state.filename || \"test.xlsx\";\n\n  const download = async () => {\n    let responseType = {\n      responseType: \"arraybuffer\"\n    };\n\n    try {\n      let response = await axios.get(\"/download/\" + filename, responseType);\n      let blob = new Blob([response.data], {\n        type: response.headers[\"content-type\"]\n      });\n      let ref = file_ext;\n      ref.current.href = URL.createObjectURL(blob);\n      ref.current.download = filename;\n      ref.current.click();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div style={container}>\n      <h1>Success {filename}</h1>\n      <div>\n        <p>\n          Download file:{\" \"}\n          <a style={{ display: \"none\" }} href=\"empty\" ref={file_ext}>\n            ref\n          </a>\n          <button onClick={download}>{filename}</button>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nconst container = {\n  margin: \"2rem\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nconst helenFileCss = {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"80%\"\n};\nconst spacer = {\n  marginTop: \"1rem\",\n  marginBottom: \"1rem\"\n};\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { navigate } from \"@reach/router\";\r\nimport { TextField, Checkbox, FormControlLabel } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\n\r\nlet now = new Date();\r\n\r\nexport const Bic = () => {\r\n  const classes = useStyles();\r\n  const [date, setDate] = useState(now.toISOString().substring(0, 10));\r\n  const [checked, setChecked] = useState(false);\r\n  const [po, setPO] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  const [bicFile, setBicFile] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [excel, setExcel] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (excel) {\r\n      console.log(excel);\r\n      navigate(\"/bic_success\", { state: { filename: excel } });\r\n    }\r\n  }, [excel]);\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    let formData = new FormData();\r\n\r\n    formData.set(\"date\", date);\r\n    formData.set(\"po\", po);\r\n    formData.set(\"email\", email);\r\n    if (file) {\r\n      let xlFile = document.querySelector(\"#file\");\r\n      formData.append(\"file\", xlFile.files[0]);\r\n    }\r\n\r\n    if (bicFile) {\r\n      let bicXlFile = document.querySelector(\"#bicFile\");\r\n      formData.append(\"bicFile\", bicXlFile.files[0]);\r\n    }\r\n\r\n    let config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\"\r\n      }\r\n    };\r\n\r\n    try {\r\n      let response = await axios.post(\"api/bic\", formData, config);\r\n      setExcel(response.data.result);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={container}>\r\n      <form\r\n        style={css}\r\n        method=\"POST\"\r\n        action=\"/bic_success\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox checked={checked} onChange={() => setChecked(!checked)} />\r\n          }\r\n          label=\"Update BIC in Progress\"\r\n        />\r\n\r\n        <TextField\r\n          type=\"date\"\r\n          name=\"date\"\r\n          value={date}\r\n          onChange={e => setDate(e.target.value)}\r\n          variant=\"outlined\"\r\n          label=\"Date\"\r\n          required={true}\r\n          InputLabelProps={{ shrink: true }}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          type=\"text\"\r\n          name=\"po\"\r\n          value={po}\r\n          onChange={e => setPO(e.target.value)}\r\n          variant=\"outlined\"\r\n          label=\"Purchase Order #\"\r\n          required={true}\r\n          InputLabelProps={{ shrink: true }}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          type=\"file\"\r\n          name=\"file\"\r\n          id=\"file\"\r\n          value={file}\r\n          onChange={e => setFile(e.target.value)}\r\n          variant=\"outlined\"\r\n          label=\"Release Schedule.xls\"\r\n          required={true}\r\n          InputLabelProps={{ shrink: true }}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        {checked && (\r\n          <TextField\r\n            type=\"file\"\r\n            name=\"bicFile\"\r\n            id=\"bicFile\"\r\n            value={bicFile}\r\n            onChange={e => setBicFile(e.target.value)}\r\n            variant=\"outlined\"\r\n            label=\"BIC File in Progress\"\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n        )}\r\n        <TextField\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n          variant=\"outlined\"\r\n          label=\"Email (optional) - separate with commas \"\r\n          InputLabelProps={{ shrink: true }}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <div style={spacer} />\r\n        {loading ? (\r\n          <div className={classes.root}>\r\n            <CircularProgress size={60} />\r\n          </div>\r\n        ) : (\r\n          <TextField type=\"submit\" fullWidth variant=\"outlined\" />\r\n        )}\r\n\r\n        <div style={spacer} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const BicSuccess = props => {\r\n  const file_ext = useRef();\r\n\r\n  let filename = props.location.state.filename || \"test.xlsx\";\r\n\r\n  const download = async () => {\r\n    let responseType = {\r\n      responseType: \"arraybuffer\"\r\n    };\r\n\r\n    try {\r\n      let response = await axios.get(\"download/\" + filename, responseType);\r\n      let blob = new Blob([response.data], {\r\n        type: response.headers[\"content-type\"]\r\n      });\r\n      let ref = file_ext;\r\n      ref.current.href = URL.createObjectURL(blob);\r\n      ref.current.download = filename;\r\n      ref.current.click();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={container}>\r\n      <h1>Success {filename}</h1>\r\n      <div>\r\n        <p>\r\n          Download file:{\" \"}\r\n          <a style={{ display: \"none\" }} href=\"empty\" ref={file_ext}>\r\n            ref\r\n          </a>\r\n          <button onClick={download}>{filename}</button>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst container = {\r\n  margin: \"2rem\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\"\r\n};\r\nconst css = {\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  width: \"80%\"\r\n};\r\nconst spacer = {\r\n  marginTop: \"1rem\",\r\n  marginBottom: \"1rem\"\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  }\r\n}));\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { navigate } from \"@reach/router\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\n\r\nexport const Idle = () => {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [values, setValues] = useState({\r\n        file: \"\",\r\n        email: \"\",\r\n        wage: \"13\",\r\n        excel: \"\",\r\n        html: \"\",\r\n        sum_idle: \"\",\r\n        proj_annual: \"\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (values.excel) {\r\n            navigate(\"/idle_success\", { state: { filename: values.excel, html: values.html, sum_idle: values.sum_idle, proj_annual: values.proj_annual } });\r\n        }\r\n    }, [values.excel, values.html, values.sum_idle, values.proj_annual]);\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        let formData = new FormData();\r\n\r\n        formData.set(\"email\", values.email);\r\n        formData.set(\"wage\", values.wage)\r\n\r\n        if (values.file) {\r\n            let xlFile = document.querySelector(\"#file\");\r\n            formData.append(\"file\", xlFile.files[0]);\r\n        }\r\n\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        };\r\n\r\n        try {\r\n            let response = await axios.post(\"/api/idle\", formData, config);\r\n            setValues({ ...values, excel: response.data.result, html: response.data.html, sum_idle: response.data.sum_idle, proj_annual: response.data.proj_annual });\r\n            setLoading(false);\r\n        } catch (err) {\r\n            console.log(err);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setValues({ ...values, [name]: value })\r\n    }\r\n\r\n    return (\r\n        <div style={container}>\r\n            <form\r\n                style={css}\r\n                method=\"POST\"\r\n                action=\"/planning_success\"\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <TextField\r\n                    type=\"file\"\r\n                    name=\"file\"\r\n                    id=\"file\"\r\n                    value={values.file}\r\n                    onChange={handleChange}\r\n                    variant=\"outlined\"\r\n                    label=\"Production Report (XX-XX-XX.xls)\"\r\n                    required={true}\r\n                    InputLabelProps={{ shrink: true }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    type=\"text\"\r\n                    name=\"wage\"\r\n                    value={values.wage}\r\n                    onChange={handleChange}\r\n                    variant=\"outlined\"\r\n                    label=\"Minimum Wage for projections\"\r\n                    InputLabelProps={{ shrink: true }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                />\r\n                <TextField\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    variant=\"outlined\"\r\n                    label=\"Email (optional) - separate with commas \"\r\n                    InputLabelProps={{ shrink: true }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                />\r\n                <div style={spacer} />\r\n                {loading ? (\r\n                    <div className={classes.root}>\r\n                        <CircularProgress size={60} />\r\n                    </div>\r\n                ) : (\r\n                        <TextField type=\"submit\" fullWidth variant=\"outlined\" />\r\n                    )}\r\n\r\n                <div style={spacer} />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const IdleSuccess = props => {\r\n    const file_ext = useRef();\r\n\r\n    let filename = props.location.state.filename || \"test.xlsx\";\r\n\r\n    const { html, sum_idle, proj_annual } = props.location.state\r\n\r\n    const download = async () => {\r\n        let responseType = {\r\n            responseType: \"arraybuffer\"\r\n        };\r\n\r\n        try {\r\n            let response = await axios.get(\"download/\" + filename, responseType);\r\n            let blob = new Blob([response.data], {\r\n                type: response.headers[\"content-type\"]\r\n            });\r\n            let ref = file_ext;\r\n            ref.current.href = URL.createObjectURL(blob);\r\n            ref.current.download = filename;\r\n            ref.current.click();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={container}>\r\n            <h1>Success {filename}</h1>\r\n            <div>\r\n                <p>\r\n                    Download file:{\" \"}\r\n                    <a style={{ display: \"none\" }} href=\"empty\" ref={file_ext}>\r\n                        ref\r\n          </a>\r\n                    <button onClick={download}>{filename}</button>\r\n                </p>\r\n                <div dangerouslySetInnerHTML={{ __html: html }} />\r\n                <p>Sum Daily Idle Cost = {sum_idle}</p>\r\n                <p><i>Projected Annual Cost = {proj_annual}</i></p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst container = {\r\n    margin: \"2rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n};\r\nconst css = {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"80%\"\r\n};\r\nconst spacer = {\r\n    marginTop: \"1rem\",\r\n    marginBottom: \"1rem\"\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        \"& > * + *\": {\r\n            marginLeft: theme.spacing(2)\r\n        }\r\n    }\r\n}));\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport { TextField } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\n\nexport const Planning = () => {\n  const classes = useStyles();\n  const [file, setFile] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [excel, setExcel] = useState(\"\");\n  const [html, setHtml] = useState(\"\");\n\n  useEffect(() => {\n    if (excel) {\n      navigate(\"/planning_success\", { state: { filename: excel, html: html } });\n    }\n  }, [excel, html]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    let formData = new FormData();\n\n    let xlFile = document.querySelector(\"#file\");\n\n    formData.set(\"email\", email);\n    formData.append(\"file\", xlFile.files[0]);\n\n    let config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n\n    try {\n      let response = await axios.post(\"/api/planning\", formData, config);\n      setExcel(response.data.result);\n      setHtml(response.data.html);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={container}>\n      <form\n        style={css}\n        method=\"POST\"\n        action=\"/planning_success\"\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          type=\"file\"\n          name=\"file\"\n          id=\"file\"\n          value={file}\n          onChange={e => setFile(e.target.value)}\n          variant=\"outlined\"\n          label=\"planningsocustkit.csv *no headers*\"\n          required={true}\n          InputLabelProps={{ shrink: true }}\n          fullWidth\n          margin=\"normal\"\n        />\n        <TextField\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          variant=\"outlined\"\n          label=\"Email (optional) - separate with commas \"\n          InputLabelProps={{ shrink: true }}\n          fullWidth\n          margin=\"normal\"\n        />\n        <div style={spacer} />\n        {loading ? (\n          <div className={classes.root}>\n            <CircularProgress size={60} />\n          </div>\n        ) : (\n          <TextField type=\"submit\" fullWidth variant=\"outlined\" />\n        )}\n\n        <div style={spacer} />\n      </form>\n    </div>\n  );\n};\n\nexport const PlanningSuccess = props => {\n  const file_ext = useRef();\n\n  let filename = props.location.state.filename || \"test.xlsx\";\n  const Html = props.location.state.html;\n\n  const download = async () => {\n    let responseType = {\n      responseType: \"arraybuffer\"\n    };\n\n    try {\n      let response = await axios.get(\"download/\" + filename, responseType);\n      let blob = new Blob([response.data], {\n        type: response.headers[\"content-type\"]\n      });\n      let ref = file_ext;\n      ref.current.href = URL.createObjectURL(blob);\n      ref.current.download = filename;\n      ref.current.click();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div style={container}>\n      <h1>Success {filename}</h1>\n      <div>\n        <p>\n          Download file:{\" \"}\n          <a style={{ display: \"none\" }} href=\"empty\" ref={file_ext}>\n            ref\n          </a>\n          <button onClick={download}>{filename}</button>\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: Html }} />\n      </div>\n    </div>\n  );\n};\n\nconst container = {\n  margin: \"2rem\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nconst css = {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"80%\"\n};\nconst spacer = {\n  marginTop: \"1rem\",\n  marginBottom: \"1rem\"\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Drawer,\r\n  Typography,\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  ListItemText\r\n} from \"@material-ui/core/\";\r\nimport { Link, Router } from \"@reach/router\";\r\nimport { HelenFile, HelenSuccess } from \"./Helen\";\r\nimport { Bic, BicSuccess } from \"./Bic\";\r\nimport { Idle, IdleSuccess } from \"./Idle\";\r\nimport { Planning, PlanningSuccess } from \"./Planning\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const App = () => {\r\n  const classes = useStyles();\r\n  const drawerItems = [\r\n    { text: \"Home\", link: \"/\" },\r\n    { text: \"Idle Cost Calculator\", link: \"idle\" },\r\n    { text: \"Helen 6417R1 File\", link: \"helen\" },\r\n    { text: \"BIC Form Packer\", link: \"bic\" },\r\n    { text: \"Heber Planning Function\", link: \"planning\" }\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <AppBar className={classes.appBar} position=\"fixed\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" noWrap>\r\n              <strong>Busse</strong> Hospital Disposables |{\" \"}\r\n              <i>Internal Functions</i>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n        >\r\n          <div className={classes.toolbar} />\r\n          <List>\r\n            {drawerItems.map((d, i) => (\r\n              <React.Fragment key={d.text + \"-\" + i}>\r\n                <ListItem button key={d.text}>\r\n                  <Link to={d.link}>\r\n                    <ListItemText primary={d.text} />\r\n                  </Link>\r\n                </ListItem>\r\n                <Divider key={i} />\r\n              </React.Fragment>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      </div>\r\n\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Router>\r\n          <Home path=\"/\" />\r\n          <HelenFile path=\"helen\" />\r\n          <HelenSuccess path=\"helen_success\" />\r\n          <Idle path=\"idle\" />\r\n          <IdleSuccess path=\"idle_success\" />\r\n          <Bic path=\"bic\" />\r\n          <BicSuccess path=\"bic_success\" />\r\n          <Planning path=\"planning\" />\r\n          <PlanningSuccess path=\"planning_success\" />\r\n        </Router>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <h1>Welcome</h1>\r\n  </div>\r\n);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3)\r\n  },\r\n  toolbar: theme.mixins.toolbar\r\n}));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./pages/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}